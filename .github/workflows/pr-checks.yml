name: PR Quality Checks

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

jobs:
  quality-checks:
    name: Code Quality & Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [22.x, 24.x]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Run TypeScript type checking
        run: npm run type-check
        
      - name: Run tests
        run: npm test
        
      - name: Run tests with coverage
        run: npm run test:ci
        if: matrix.node-version == '24.x'
        
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '24.x'
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 7
          
      - name: Comment coverage on PR
        uses: actions/github-script@v7
        if: matrix.node-version == '24.x' && github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = './coverage/coverage-summary.json';
            
            if (!fs.existsSync(path)) {
              console.log('Coverage file not found, skipping coverage comment');
              return;
            }
            
            const coverage = JSON.parse(fs.readFileSync(path, 'utf8'));
            const total = coverage.total;
            
            const comment = `## Test Coverage Report
            
            | Coverage Type | Percentage | Status |
            |---------------|------------|---------|
            | Statements    | ${total.statements.pct}% | ${total.statements.pct >= 83 ? '✅' : '❌'} |
            | Branches      | ${total.branches.pct}% | ${total.branches.pct >= 74 ? '✅' : '❌'} |
            | Functions     | ${total.functions.pct}% | ${total.functions.pct >= 86 ? '✅' : '❌'} |
            | Lines         | ${total.lines.pct}% | ${total.lines.pct >= 84 ? '✅' : '❌'} |
            
            Current coverage thresholds: 74% branches, 86% functions, 84% lines, 83% statements`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Check for build artifacts
        run: |
          if [ ! -d "dist" ]; then
            echo "Build failed: dist directory not created"
            exit 1
          fi
          if [ ! -f "dist/cli/index.js" ]; then
            echo "Build failed: CLI entry point not created"
            exit 1
          fi
          echo "Build successful: All artifacts created"

  # Summary job that depends on all other jobs
  all-checks:
    name: All Checks Complete
    runs-on: ubuntu-latest
    needs: [quality-checks, build-check]
    if: always()
    
    steps:
      - name: Check all job statuses
        run: |
          if [[ "${{ needs.quality-checks.result }}" != "success" || "${{ needs.build-check.result }}" != "success" ]]; then
            echo "One or more checks failed"
            exit 1
          fi
          echo "All checks passed successfully"